<?php
/**
 * @file
 * comment_notify.install.
 */

/**
 * Implements hook_install().
 */
function comment_notify_install() {

  // Create entries for existing comments.

  $comments_select = db_select('comment', 'c');
  $comments_select->join('users', 'u', 'c.uid = u.uid');
  $comments_select->addField('c', 'cid');
  $comments_select->addExpression('0', 'notify');
  // Mix in a random string to all values.
  $salt = uniqid(mt_rand(), TRUE);
  if (db_driver() == 'pgsql') {
    $comments_select->addExpression("MD5(:salt || c.mail || COALESCE(u.mail, u.init) || c.uid || c.name || c.nid || c.hostname || c.cid)", 'notify_hash', array(':salt' => $salt));
  }
  else {
    $comments_select->addExpression("MD5(CONCAT(:salt, c.mail, COALESCE(u.mail, u.init), c.uid, c.name, c.nid, c.hostname, c.cid))", 'notify_hash', array(':salt' => $salt));
  }

  // Set module weight low so that other modules act on the comment first.
  db_insert('comment_notify')->from($comments_select)->execute();
  db_update('system')->
    fields(array(
    'weight' => 10
    ))
    ->condition('name', 'comment_notify');
}

/**
 * Implements hook_uninstall().
 */
function comment_notify_uninstall() {
  backdrop_uninstall_schema('comment_notify');
}

/**
 * Implements hook_schema().
 */
function comment_notify_schema() {
  $schema['comment_notify'] = array(
    'description' => t('Stores information about which commenters on the site have subscriped to followup emails.'),
    'fields' => array(
      'cid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'description' => 'The comment id from {comments}.cid',
        'not null' => TRUE,
        'disp-width' => '11'),
      'notify' => array(
        'type' => 'int',
        'description' => 'An integer indicating the type of subscription: 0 means not subscribed, 1 means subscribed to all comments, and 2 means only subscribed to replies of this comment.',
        'size' => 'tiny',
        'not null' => TRUE,
        'disp-width' => '11'),
      'notify_hash' => array(
        'type' => 'varchar',
        'description' => 'A hash of unique information about the commenter.  Used for unsubscribing users.',
        'length' => '128',
        'not null' => TRUE,
        'default' => ''),
      'notified' => array(
        'type' => 'int',
        'description' => 'A boolean indicator for whether or not a notification for the comment has been sent: 1 means yes, 0 means no.',
        'size' => 'tiny',
        'not null' => TRUE,
        'default' => 0,
        'disp-width' => '11'),
    ),
    'primary key' => array('cid'),
    'indexes' => array(
      'notify_hash' => array('notify_hash')),
  );
  $schema['comment_notify_user_settings'] = array(
    'fields' => array(
        'uid' => array(
          'type' => 'int',
          'unsigned' => TRUE,
          'description' => 'The user id from {users}.cid',
          'not null' => TRUE,
          'disp-width' => '11'),
        'node_notify' => array(
          'type' => 'int',
          'description' => 'An integer indicating the default type of subscription: 0 means not subscribed, 1 means subscribed to all comments, and 2 means only subscribed to replies of this comment.',
          'size' => 'tiny',
          'not null' => TRUE,
          'default' => 0,
          'disp-width' => '11'),
        'comment_notify' => array(
          'type' => 'int',
          'description' => 'An integer indicating the default type of subscription: 0 means not subscribed, 1 means subscribed to all comments, and 2 means only subscribed to replies of this comment.',
          'size' => 'tiny',
          'not null' => TRUE,
          'default' => 0,
          'disp-width' => '11'),
    ),
    'primary key' => array('uid'),
  );

  return $schema;
}

/**
 * Implements hook_update_last_removed().
 */
function comment_notify_update_last_removed() {
  return 7005;
}

/**
 * @defgroup updates-7.x-to-1.x Updates from 7.x to 1.x
 * @{
 * Update functions from Drupal 7.x to Backdrop CMS 1.x.
 */

/**
 * Move comment_notify settings from variables to config.
 */
function comment_notify_update_1000() {
  // Migrate variables to config.
  $config = config('comment_notify.settings');
  $config->set('available_alerts', update_variable_get('comment_notify_available_alerts', array(1 => 1, 2 => 2)));
  $config->set('default_anon_mailalert', update_variable_get('comment_notify_default_anon_mailalert', 1));
  $config->set('default_registered_mailalert', update_variable_get('comment_notify_default_registered_mailalert', 0));
  $config->set('node_notify_default_mailalert', update_variable_get('comment_notify_node_notify_default_mailalert', 0));
  $config->set('node_types', update_variable_get('comment_notify_node_types', array('article' => 'article')));
  $config->set('node_notify_default_mailtext', update_variable_get('comment_notify_node_notify_default_mailtext', 'Hi [comment:node:author],

You have received a comment on: "[comment:node:title]"

----
[comment:title]
[comment:body]
----

You can view the comment at the following url
[comment:url]

You will receive emails like this for all replies to your posts. You can
disable this by logging in and changing the settings on your user account at
[comment:node:author:edit-url].

-- [site:name] team
[site:url]'));
  $config->set('comment_notify_default_mailtext', update_variable_get('comment_notify_comment_notify_default_mailtext', 'Hi [comment-subscribed:author],

[comment:author] has commented on: "[comment:node:title]"

----
[comment:title]
[comment:body]
----

You can view the comment at the following url
[comment:url]

You can stop receiving emails when someone replies to this post,
by going to [comment-subscribed:unsubscribe-url]

You can set up auto-following feature for all future posts
by creating your own user with a few clicks here [site:login-url]

-- [site:name] team
[site:url]'));

  $config->save();

  // Delete variables.
  update_variable_del('comment_notify_available_alerts');
  update_variable_del('comment_notify_comment_notify_default_mailtext');
  update_variable_del('comment_notify_default_anon_mailalert');
  update_variable_del('comment_notify_default_registered_mailalert');
  update_variable_del('comment_notify_node_notify_default_mailalert');
  update_variable_del('comment_notify_node_notify_default_mailtext');
  update_variable_del('comment_notify_node_types');

}

/**
 * @} End of "defgroup updates-7.x-to-1.x"
 * The next series of updates should start at 2000.
 */
